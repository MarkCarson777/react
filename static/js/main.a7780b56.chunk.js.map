{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserList.js","components/PostList.js","components/UserPosts.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUsers","UserList","this","props","users","map","user","className","to","id","name","email","renderList","React","Component","connect","state","PostList","userId","userPosts","posts","filter","post","renderedList","userPost","title","length","UserPosts","match","params","ownProps","Root","App","path","exact","component","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"+QAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCDEC,EAAa,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHpB,2CAAN,uDAMbC,EAAa,yDAAM,WAAMR,GAAN,eAAAC,EAAA,sEACPC,EAAgBC,IAAhB,UADO,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHnB,2CAAN,uD,uBCFpBE,E,uKACJ,WACEC,KAAKC,MAAMH,e,wBAGb,WACE,OAAOE,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC1B,OACE,qBAAmBC,UAAU,SAA7B,SACE,cAAC,IAAD,CAAMC,GAAE,WAAMF,EAAKG,IAAnB,SACE,yBAAQF,UAAU,cAAlB,UACE,4BAAID,EAAKI,OACT,4BAAIJ,EAAKK,cAJLL,EAAKG,S,oBAYrB,WACE,OACE,gCACE,8BACE,oBAAIF,UAAU,SAAd,oCAEF,qBAAKA,UAAU,gBAAf,SACGL,KAAKU,sB,GA3BOC,IAAMC,WAsCdC,eAJS,SAACC,GACvB,MAAO,CAAEZ,MAAOY,EAAMZ,SAGgB,CAAEJ,cAA3Be,CAAyCd,GCxClDgB,E,uKACJ,WACEf,KAAKC,MAAMZ,WAAWW,KAAKC,MAAMe,U,wBAKnC,WAAc,IAAD,OACLC,EAAYjB,KAAKC,MAAMiB,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,SAAW,EAAKf,MAAMe,UAEvEK,EAAeJ,EAAUd,KAAI,SAAAmB,GACjC,OACE,8BACGA,EAASC,OADF,EAAKtB,MAAMiB,MAAMX,OAM/B,OACE,gCACE,oDACoBU,EAAUO,UAE9B,8BACGH,IAEH,8BAEE,oD,oBAQR,WACE,OACI,8BACGrB,KAAKU,mB,GAvCOC,IAAMC,WAiDdC,eAJS,SAACC,GACvB,MAAO,CAAEI,MAAOJ,EAAMI,SAGgB,CAAE7B,cAA3BwB,CAAyCE,GC9ClDU,G,6KACJ,WACEzB,KAAKC,MAAMH,WAAWE,KAAKC,MAAMyB,MAAMC,OAAOpB,M,oBAGhD,WACE,OACE,gCACE,gCACE,oBAAIF,UAAU,SAAd,kCACA,qBAAIA,UAAU,SAAd,sBAAiCL,KAAKC,MAAMG,KAAKI,WAEnD,cAAC,IAAD,CAAMF,GAAG,IAAT,SACE,wBAAQD,UAAU,cAAlB,uBAIF,sBAAKA,UAAU,YAAf,UACE,4BAAIL,KAAKC,MAAMG,KAAKI,OACpB,4BAAIR,KAAKC,MAAMG,KAAKK,WAEtB,cAAC,EAAD,CAAUO,OAAQhB,KAAKC,MAAMG,KAAKG,Y,GArBlBI,IAAMC,YAiCfC,eANS,SAACC,EAAOc,GAC9B,MAAO,CACLxB,KAAMU,EAAMZ,MAAM0B,EAASF,MAAMC,OAAOpB,GAAK,MAIT,CAAET,aAAYT,cAAvCwB,CAAqDY,G,OCnC9DI,EAAO,WACX,OACE,8BACE,cAAC,EAAD,OAgBSC,EAXH,WACV,OACE,qBAAKzB,UAAU,aAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0B,KAAK,IAAIC,OAAK,EAACC,UAAWJ,IACjC,cAAC,IAAD,CAAOE,KAAK,OAAOC,OAAK,EAACC,UAAWR,U,QCd7BS,cAAgB,CAC7BhB,MCLa,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIqB,EAAW,uCACrC,OAAQA,EAAOxC,MACb,IAAK,cACH,OAAO,YAAIwC,EAAOvC,SACpB,QACE,OAAOkB,IDCXZ,MENa,WAAwB,IAAvBY,EAAsB,uDAAf,GAAIqB,EAAW,uCACpC,OAAQA,EAAOxC,MACb,IAAK,aACH,OAAOwC,EAAOvC,QAChB,QACE,OAAOkB,MCIPsB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,cAAc,Y","file":"static/js/main.a7780b56.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n});","import jsonPlaceholder from '../apis/jsonPlaceholder'; \n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n\n  dispatch({ type: 'FETCH_POSTS', payload: response.data })\n};\n\nexport const fetchUsers = () => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users`);\n\n  dispatch({ type: 'FETCH_USER', payload: response.data });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../actions';\nimport { Link } from 'react-router-dom';\nimport './UserList.css';\n\nclass UserList extends React.Component {\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  renderList() {\n    return this.props.users.map(user => {\n      return (\n        <div key={user.id} className=\"button\">\n          <Link to={`/${user.id}`}>\n            <button className=\"user-button\">\n              <p>{user.name}</p>\n              <p>{user.email}</p>\n            </button>\n          </Link>\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h3 className=\"header\">Umi React Assignment</h3>\n        </div>\n        <div className=\"button-layout\">\n          {this.renderList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { users: state.users };\n}\n\nexport default connect(mapStateToProps, { fetchUsers })(UserList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions';\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPosts(this.props.userId);\n  }\n\n  // create reverse list method\n\n  renderList() {\n    const userPosts = this.props.posts.filter(post => post.userId === this.props.userId);\n\n    const renderedList = userPosts.map(userPost => {\n      return (\n        <div key={this.props.posts.id}>\n          {userPost.title}\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <div>\n          Number of posts: {userPosts.length}\n        </div>\n        <div>\n          {renderedList}\n        </div>\n        <div>\n          {/* add onClick handler */}\n          <button>\n            Reverse\n          </button>\n        </div>\n      </div>\n    );\n  }\n  \n  render() {\n    return (\n        <div>\n          {this.renderList()}\n        </div>  \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { posts: state.posts };\n}\n\nexport default connect(mapStateToProps, { fetchPosts })(PostList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers, fetchPosts } from '../actions';\nimport { Link } from 'react-router-dom';\nimport PostList from './PostList';\nimport './UserPosts.css';\n\nclass UserPosts extends React.Component {\n  componentDidMount() {\n    this.props.fetchUsers(this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h3 className=\"header\">Umi React Assignment</h3>\n          <h3 className=\"header\">Posts by {this.props.user.name}</h3>\n        </div>\n        <Link to=\"/\">\n          <button className=\"back-button\">\n            GO BACK\n          </button>\n        </Link>\n        <div className=\"user-card\">\n          <p>{this.props.user.name}</p>\n          <p>{this.props.user.email}</p>\n        </div>\n        <PostList userId={this.props.user.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users[ownProps.match.params.id - 1]\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUsers, fetchPosts })(UserPosts);","import React from 'react';\nimport UserList from './UserList';\nimport UserPosts from './UserPosts';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nconst Root = () => {\n  return (\n    <div>\n      <UserList />\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div className=\"background\">\n      <BrowserRouter>\n        <Route path=\"/\" exact component={Root} />\n        <Route path=\"/:id\" exact component={UserPosts} />\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer\n});","export default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};","export default (state =[], action) => {\n  switch (action.type) {\n    case 'FETCH_USER':\n      return action.payload;\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}